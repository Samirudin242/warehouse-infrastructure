---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: warehouse-deployment
    namespace: default
    labels:
      app: warehouse-deployment
  spec:
    selector:
      matchLabels:
        app: warehouse-deployment
    template:
      metadata:
        labels:
          app: warehouse-deployment
      spec:
        containers:
          - name: warehouse-service
            image: asia-southeast2-docker.pkg.dev/civil-hash-446108-e1/com-multiwarehouse-app-repository/warehouse.service:3.0-SNAPSHOT
            env:
              - name: SPRING_DATASOURCE_URL
                value: "jdbc:postgresql://postgres-service:5432/warehouse_service?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified"
              - name: SPRING_DATASOURCE_INITIALIZATION-MODE
                value: "never"
              - name: KAFKA-CONFIG_BOOTSTRAP-SERVERS
                value: "gke-confluent-kafka-cp-kafka-headless:9092"
              - name: KAFKA-CONFIG_SCHEMA-REGISTRY-URL
                value: "http://gke-confluent-kafka-cp-schema-registry:8081"
            resources:
              limits:
                cpu: "500m"
                memory: "1024Mi"
              requests:
                cpu: "200m"
                memory: "256Mi"
  ---
  apiVersion: v1
  kind: Service
  metadata:
    name: warehouse-service
    namespace: default
    labels:
      app: warehouse-service
  spec:
    selector:
      app: warehouse-deployment
    ports:
      - name: warehouse-service-port
        protocol: TCP
        port: 8080
    type: LoadBalancer
    loadBalancerIP: ""
  ---
  #apiVersion: autoscaling/v2beta1
  #kind: HorizontalPodAutoscaler
  #metadata:
  #  name: warehouse-deployment-hpa
  #  namespace: default
  #  labels:
  #    app: warehouse-deployment
  #spec:
  #  scaleTargetRef:
  #    kind: Deployment
  #    name: warehouse-deployment
  #    apiVersion: apps/v1
  #  minReplicas: 2
  #  maxReplicas: 4
  #  metrics:
  #    - type: Resource
  #      resource:
  #        name: cpu
  #        targetAverageUtilization: 85
  #---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: product-deployment
    namespace: default
    labels:
      app: product-deployment
  spec:
    selector:
      matchLabels:
        app: product-deployment
    template:
      metadata:
        labels:
          app: product-deployment
      spec:
        containers:
          - name: product-service
            image: asia-southeast2-docker.pkg.dev/civil-hash-446108-e1/com-multiwarehouse-app-repository/product.service:3.0-SNAPSHOT
            env:
              - name: SPRING_DATASOURCE_URL
                value: "jdbc:postgresql://postgres-service:5432/product_service?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified"
              - name: SPRING_DATASOURCE_INITIALIZATION-MODE
                value: "never"
              - name: KAFKA-CONFIG_BOOTSTRAP-SERVERS
                value: "gke-confluent-kafka-cp-kafka-headless:9092"
              - name: KAFKA-CONFIG_SCHEMA-REGISTRY-URL
                value: "http://gke-confluent-kafka-cp-schema-registry:8081"
            resources:
              limits:
                cpu: "500m"
                memory: "1024Mi"
              requests:
                cpu: "200m"
                memory: "256Mi"
  ---
  apiVersion: v1
  kind: Service
  metadata:
    name: product-service
    namespace: default
    labels:
      app: product-service
  spec:
    selector:
      app: product-deployment
    ports:
      - name: product-service-port
        protocol: TCP
        port: 8083
    type: LoadBalancer
    loadBalancerIP: ""
  ---
  # apiVersion: autoscaling/v2beta1
  # kind: HorizontalPodAutoscaler
  # metadata:
  #  name: payment-deployment-hpa
  #  namespace: default
  #  labels:
  #    app: payment-deployment
  # spec:
  #  scaleTargetRef:
  #    kind: Deployment
  #    name: payment-deployment
  #    apiVersion: apps/v1
  #  minReplicas: 2
  #  maxReplicas: 4
  #  metrics:
  #    - type: Resource
  #      resource:
  #        name: cpu
  #        targetAverageUtilization: 85
  # ---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: user-deployment
    labels:
      app: user-deployment
  spec:
    selector:
      matchLabels:
        app: user-deployment
    template:
      metadata:
        labels:
          app: user-deployment
      spec:
        containers:
          - name: user-service
            image: asia-southeast2-docker.pkg.dev/civil-hash-446108-e1/com-multiwarehouse-app-repository/user.service:3.0-SNAPSHOT
            env:
              - name: SPRING_DATASOURCE_URL
                value: "jdbc:postgresql://postgres-service:5432/user_service?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified"
              - name: SPRING_DATASOURCE_INITIALIZATION-MODE
                value: "never"
              - name: KAFKA-CONFIG_BOOTSTRAP-SERVERS
                value: "gke-confluent-kafka-cp-kafka-headless:9092"
              - name: KAFKA-CONFIG_SCHEMA-REGISTRY-URL
                value: "http://gke-confluent-kafka-cp-schema-registry:8081"
            resources:
              limits:
                cpu: "500m"
                memory: "1024Mi"
              requests:
                cpu: "200m"
                memory: "256Mi"
  ---
  apiVersion: v1
  kind: Service
  metadata:
    name: user-service
    namespace: default
    labels:
      app: user-service
  spec:
    selector:
      app: user-deployment
    ports:
      - name: user-service-port
        protocol: TCP
        port: 8082
    type: LoadBalancer
    loadBalancerIP: ""
  ---
  # apiVersion: autoscaling/v2beta1
  # kind: HorizontalPodAutoscaler
  # metadata:
  #  name: customer-deployment-hpa
  #  namespace: default
  #  labels:
  #    app: customer-deployment
  # spec:
  #  scaleTargetRef:
  #    kind: Deployment
  #    name: customer-deployment
  #    apiVersion: apps/v1
  #  minReplicas: 2
  #  maxReplicas: 4
  #  metrics:
  #    - type: Resource
  #      resource:
  #        name: cpu
  #        targetAverageUtilization: 85
  ---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: raja-ongkir
    labels:
      app: raja-ongkir
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: raja-ongkir
    template:
      metadata:
        labels:
          app: raja-ongkir
      spec:
        containers:
          - name: raja-ongkir
            image: asia-southeast2-docker.pkg.dev/civil-hash-446108-e1/com-multiwarehouse-app-repository/raja-ongkir:1.0
            env:
              - name: API_KEY
                value: "43cdf7f9fc3b84498012095f235ce33e"
              - name: API_URL_RAJA_ONGKIR
                value: "https://api.rajaongkir.com/starter"
              - name: API_PRODUCT_SERVICE
                value: "http://34.101.192.13:8083"
              - name: ACCESS_TOKEN_COOKIE
                value: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkYzkxYWIxNi1iMGUzLTRiNmQtOTE5Mi04N2ViNmRlNWQwYmQiLCJ1c2VybmFtZSI6InN1cGVyX2FkbWluMTEiLCJlbWFpbCI6InN1cGVyX2FkbWluQG1haWwuY29tIiwicm9sZSI6IlNVUEVSX0FETUlOIiwicHJvZmlsZVBpY3R1cmUiOiJodHRwOi8vZ29vZ2xlLmNvbSIsImlhdCI6MTczNzI3NDM4NywiZXhwIjoxNzM3MzYwNzg3fQ.RuGKBxzxJOWcINhktICTXMcbh9JNXVNPfcvaqDmSdZ0"
  ---
  apiVersion: v1
  kind: Service
  metadata:
    name: raja-ongkir-service
  spec:
    type: LoadBalancer
    selector:
      app: raja-ongkir
    ports:
      - name: raja-ongkir-service-port
        protocol: TCP
        port: 8083
  